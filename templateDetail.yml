AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: Plantilla para crear los recursos del proyecto de Inspeccion de Riesgos

Parameters:
  Environment:
    Type: String
    Description: Valor del entorno
    Default: dev
  LambdaInspRiesgoNotificacion:
    Type: String
    Description: ARN de la funcion lambda InspRiesgoNotificacion
  LambdaInspRiesgoGeneraInforme:
    Type: String
    Description: ARN de la lamnbda inspRiesgoGeneraInforme
  LambdaInspRiesgoEnvioInforme:
    Type: String
    Description: ARN de la lambda inspRiesgoEnvioInforme
  TablaInspeccion:
    Type: String
    Description: Nombre de la tabla de inspeccion
  TablaDetalle:
    Type: String
    Description: Nombre de la tabla detalle
  TablaSiniestro:
    Type: String
    Description: Nombre de la tabla siniestro
  TablaArchivo:
    Type: String
    Description: Nombre ed la tabla Archivo
  TablaEnlace:
    Type: String
    Description: Nombre de la tabla Enlace
  BucketTemplate:
    Type: String
    Description: Nombre del bucket donde est√° el template
  KeyTemplate:
    Type: String
    Description: Ruta del template dentro del bucket
  TablaDatosTramite:
    Type: String
    Description: Nombre de la tabla datos tramite
  TablaGrupoRamos:
    Type: String
    Description: Nombre de la tabla grupo ramos
  TablaContactoCliente:
    Type: String
    Description: Nombre de la tabla contacto cliente
  TablaValoresDeclarados:
    Type: String
    Description: Nombre de la tabla valores declarados
  LambdaToken:
    Type: String
    Description: ARN de la Lambda del token
  
Resources:

  ApiRole: #Rol para enviar SES desde el Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ApiRoleInspeccion-${Environment}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  # RoleInspeccionSolicitud:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: !Join
  #       - ""
  #       - - InspeccionSolicitudRole
  #         - !Ref Environment
  #     AssumeRolePolicyDocument:
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: lambda.amazonaws.com
  #           Action: "sts:AssumeRole"
  #     Path: /
  #     Policies:
  #       - PolicyName: DynamoCRUD
  #         PolicyDocument:
  #           Version: 2012-10-17
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - dynamodb:GetItem
  #                 - dynamodb:DeleteItem
  #                 - dynamodb:PutItem
  #                 - dynamodb:Scan
  #                 - dynamodb:Query
  #                 - dynamodb:UpdateItem
  #                 - dynamodb:BatchWriteItem
  #                 - dynamodb:BatchGetItem
  #                 - dynamodb:DescribeTable
  #                 - dynamodb:ConditionCheckItem
  #               Resource: '*'        
  #       - PolicyName: S3
  #         PolicyDocument:
  #           Version: 2012-10-17
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - "s3:GetBucketAcl"
  #                 - "s3:GetBucketPolicy"
  #                 - "s3:GetObject"
  #                 - "s3:GetObjectAcl"
  #               Resource: '*'
  #       - PolicyName: CWL
  #         PolicyDocument:
  #           Version: 2012-10-17
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - logs:CreateLogDelivery
  #                 - logs:CreateLogGroup
  #                 - logs:CreateLogStream
  #                 - logs:GetLogEvents
  #                 - logs:GetLogGroupFields
  #                 - logs:GetLogRecord
  #                 - logs:PutDestination
  #                 - logs:PutLogEvents
  #                 - logs:PutQueryDefinition
  #                 - logs:UpdateLogDelivery
  #               Resource: '*'    

  # InspeccionSolicitud:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: !Join
  #       - ""
  #       - - DataSolicitud
  #         - "-"
  #         - !Ref Environment
  #     Description: Funcion obtener los datos de la solicitud de Inspeccion
  #     CodeUri: Functions/InspeccionSolicitud/
  #     Handler: index.handler
  #     Runtime: nodejs14.x
  #     MemorySize: 128
  #     Timeout: 30
  #     Role: !GetAtt RoleInspeccionSolicitud.Arn
  #     Environment:
  #       Variables:
  #         REGION: !Ref "AWS::Region"
  #         ENVIRONMENT: !Ref Environment
  #         TABLE_INSPECCION: !Ref TablaInspeccion
  #         BUCKET_TEMPLATE: !Ref BucketTemplate
  #         KEY_TEMPLATE: !Ref KeyTemplate
          
  
  TableNotificacion:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: num_tramite
          AttributeType: S
        - AttributeName: numero_reintentos
          AttributeType: N
      KeySchema:
        - AttributeName: num_tramite
          KeyType: HASH
        - AttributeName: numero_reintentos
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Join
        - ''
        - - notificacion
          - '-'
          - !Ref Environment

  RoleNotificar:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - ""
        - - NotificarRole
          - !Ref Environment
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: DynamoCRUD
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:DescribeTable
                  - dynamodb:ConditionCheckItem
                Resource: '*'        
        - PolicyName: SES
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                  - "ses:SendTemplatedEmail"
                Resource: '*'
        - PolicyName: CWL
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:GetLogEvents
                  - logs:GetLogGroupFields
                  
                  - logs:GetLogRecord
                  - logs:PutDestination
                  - logs:PutLogEvents
                  - logs:PutQueryDefinition
                  - logs:UpdateLogDelivery
                Resource: '*'    
  Notificar:
    Type: AWS::Serverless::Function
    Properties:
      Description: Funcion obtener los datos de la solicitud de Inspeccion
      CodeUri: Functions/Notificar/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt RoleNotificar.Arn
      Environment:
        Variables:
          REGION: !Ref "AWS::Region"
          ENVIRONMENT: !Ref Environment
          TABLA_NOTIFICACION: !Ref TableNotificacion
          TABLA_INSPECCION: ! Ref TablaInspeccion
          ADMINISTRATOR: raul.talledo@gmail.com

  RegistroSolicitudMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: Workflows/RegistroSolicitudMachine/definitions.json
      DefinitionSubstitutions: 
        FUNCTION_DATA_SOLICITUD: !Ref InspeccionSolicitud
        FUNCTION_INSPECCION_SOLICITUD: !Ref LambdaInspRiesgoNotificacion
        FUNCTION_NOTIFICAR: !Ref Notificar
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref InspeccionSolicitud
        - LambdaInvokePolicy:
            FunctionName: !Ref LambdaInspRiesgoNotificacion
        - LambdaInvokePolicy:
            FunctionName: !Ref Notificar
  
  InspInformeMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: Workflows/InspInformeMachine/definitions.json
      DefinitionSubstitutions:
        FUNCTION_GENERAR_INFORME: !Ref LambdaInspRiesgoGeneraInforme
        FUNCTION_ENVIO_INFORME: !Ref LambdaInspRiesgoEnvioInforme
        FUNCTION_NOTIFICAR: !Ref Notificar
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref LambdaInspRiesgoGeneraInforme
        - LambdaInvokePolicy:
            FunctionName: !Ref LambdaInspRiesgoEnvioInforme
        - LambdaInvokePolicy:
            FunctionName: !Ref Notificar


  myApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join 
        - "" 
        - - InspRiesgoInformeConstruccion
          - "-"
          - !Ref Environment
      StageName: !Ref Environment
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: Api/InspRiesgoInformeConstruccion/definitions.yml

  
  RegistrarInspeccionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join
        - ""
        - - InspRiesgoInformeConstruccion
          - "-"
          - !Ref Environment
      Description: Funcion para las operaciones con la informaci√≥n de Inspecci√≥n
      CodeUri: Functions/InspRiesgoInformeConstruccion/
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt RoleInspeccionSolicitud.Arn
      Environment:
        Variables:
          REGION: !Ref "AWS::Region"
          ENVIRONMENT: !Ref Environment
          TABLE_INSPECCION: !Ref TablaInspeccion
          TABLE_DETALLE: !Ref TablaDetalle
          TABLE_SINIESTRO: !Ref TablaSiniestro
          TABLE_ARCHIVO: !Ref TablaArchivo
          TABLE_ENLACE: !Ref TablaEnlace
          BUCKET_TEMPLATE: !Ref BucketTemplate
          KEY_TEMPLATE: !Ref KeyTemplate

  #Componentes para crear la api de Registro Solicitud

  # ApiRegistroSolicitud:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     Name: !Join
  #       - ""
  #       - - InspRiesgoRegistroSolicitud
  #         - "-"
  #         - !Ref Environment
  #     StageName: !Ref Environment
  #     DefinitionBody:
  #       Fn::Transform:
  #           Name: AWS::Include
  #           Parameters:
  #             Location: Api/InspRiesgoRegistroSolicitud/definitions.yml

  # RiesgoRegistroSolicitudFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: !Join
  #       - ""
  #       - - InspRiesgoRegistroSolicitud
  #         - "-"
  #         - !Ref Environment
  #     Description: Funcion para las operaciones del Registro de Solicitud
  #     CodeUri: Functions/InspRiesgoRegistroSolicitud/
  #     Handler: handler.solicitud
  #     Runtime: nodejs14.x
  #     MemorySize: 128
  #     Timeout: 60
  #     Role: !GetAtt RoleInspeccionSolicitud.Arn
  #     Environment:
  #       Variables:
  #         REGION: !Ref "AWS::Region"
  #         DATOS_TRAMITE_TABLE: !Ref TablaDatosTramite
  #         GRUPO_RAMOS_TABLE: !Ref TablaGrupoRamos
  #         CONTACTO_CLIENTE_TABLE: !Ref TablaContactoCliente
  #         VALORES_DECLARADOS_TABLE: !Ref TablaValoresDeclarados
  #         #IS_OFFLINE: false

Outputs:
  ApiRole:
    Description: Nombre del ROLE asignado a las APIs
    Value: !GetAtt ApiRole.Arn
  # RoleInspeccionSolicitud:
  #   Description: Nombre del ROLE para las Solicitudes de Inspeccion
  #   Value: !GetAtt RoleInspeccionSolicitud.Arn