swagger: "2.0"
info:
  description: "Permite el registro de informe de inspección de riesgo de Informe General"
  version: "v1.0"
  title: "Servicio Cloud para Registro Informe de Inspección"
  contact: 
    email: "analista@mapfre.com"    
  license: 
      name: "Apache 2.0"
      url: "http://www.apache.org/licenses/LICENSE-2.0.html"    

schemes:
- "https"

securityDefinitions:
   autorizador:
     type: "apiKey"
     name: "Authorization"
     in: "header"
     x-amazon-apigateway-authtype: "custom"
     x-amazon-apigateway-authorizer:
       authorizerUri:
         Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaToken}/invocations"
       authorizerCredentials:
         Fn::GetAtt: "InspRiesgoGeoReferenciacionRole.Arn"
       authorizerResultTtlInSeconds: 300
       type: "token"
x-amazon-apigateway-request-validators:
  body-validate:
    validateRequestBody: true
    validateRequestParameters: false

x-amazon-apigateway-gateway-responses:
  BAD_REQUEST_BODY:
    statusCode: 400
    responseTemplates:
      application/json: " \n
          { \n
            \"exito\": false,
            \"mensaje\": \"Error en el body enviado\",
            \"data\": [],
            \"errores\": [
              {
                \"codigo\": \"2\",
                \"mensaje\": \"Error de validación de datos.  campo: $context.error.validationErrorString \"
              }
            ]            
          }" 
  ACCESS_DENIED:
    statusCode: 403
    responseTemplates:
      application/json: " \n
          { \n
            \"exito\": false,
            \"mensaje\": \"Error en la operación\",
            \"data\": [],
            \"errores\": [
              {
                \"codigo\": \"1\",
                \"mensaje\": \"Error de validación de token, u acceso\"
              }
            ]
          }"   
  UNAUTHORIZED:
    statusCode: 401
    responseTemplates:
      application/json: " \n
          { \n
            \"exito\": false,
            \"mensaje\": \"Error en el autorización\",
            \"data\": [],
            \"errores\":$context.error.messageString
          }"       
x-amazon-apigateway-request-validator: body-validate     
paths:
  /:
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /InspRiesgoGeoReferenciacion:
    options:
        consumes:
          - "application/json"
        produces:
          - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
  /InspRiesgoGeoReferenciacion/registrar:
    options:
        consumes:
          - "application/json"
        produces:
          - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'POST,GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    post:
      tags: 
        - insp-riesgo-informe-general-cloud-service-handler      
      summary: "Registrar datos del informe general de inspeccion de riesgos"
      operationId: "registrarPaso4"
      description: "Permite agregar los datos de informe general de inspección de riesgo del paso 4\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: inspeccion
          in: body
          description: "Información de la Inspección a registrar"
          required: true
          schema:
            $ref: "#/definitions/Inspeccion"
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspRiesgoGeoReferenciacionRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspRiesgoGeoReferenciacionFunction.Arn}/invocations"
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": $body.exito, \n
                  \"mensaje\": \"$body.mensaje\", \n
                  \"data\": [
                        {
                          \"codigo\":  \"$body.data.codigo\", \n
                          \"mensaje\":  \"$body.data.mensaje\" \n
                        }
                     ], 
                  \"errores\": []
                }
              "               
          "BAD.*":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Token\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"1\",
                    \"mensaje\": \"No se reconoce token\"
                  }]
                }
              "           
          "INT.*":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Interno\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"-1\",
                    \"mensaje\": \"Error Interno\"
                  }]
                }
              "                                
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
              \"action\": \"registrar\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"  
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"          
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"  
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"          
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"            

  /InspRiesgoGeoReferenciacion/actualizar:
    options:
        consumes:
          - "application/json"
        produces:
          - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'PUT,GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    put:
      tags: 
        - auto-inspeccion-cloud-service-handler      
      summary: "actualizar datos del informe general de inspeccion de riesgos"
      operationId: "updatePaso4"
      description: "Permite actualizar los datos de informe de inspección de riesgo del paso 4\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: inspeccion
          in: body
          description: "Información de la Inspección a registrar"
          #required: true
          schema:
            $ref: "#/definitions/Inspeccion"
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspRiesgoGeoReferenciacionRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspRiesgoGeoReferenciacionFunction.Arn}/invocations"
        responses:
          "default":
            statusCode: "200"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": $body.exito, \n
                  \"mensaje\": \"$body.mensaje\", \n
                  \"data\": [
                        {
                          \"codigo\":  \"$body.data.codigo\", \n
                          \"mensaje\":  \"$body.data.mensaje\" \n
                        }
                     ], 
                  \"errores\": []
                }
                "             
          "BAD.*":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"No encontrado\", \n
                  \"data\": [], 
                  \"errores\": [{ 
                    \"codigo\": \"2\",
                    \"mensaje\": \"No encontrado\"
                  }]
                }
              "
          "INT.*":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Interno\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"-1\",
                    \"mensaje\": \"Error Interno\"
                  }]
                }
              "                  
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
             \"action\": \"actualizar\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"              
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"                        
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"                        

  /InspRiesgoGeoReferenciacion/listar/{claveTramite}/{email}:
    options:
        consumes:
          - "application/json"
        produces:
          - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    get:
      tags: 
        - auto-inspeccion-cloud-service-handler      
      summary: "permite listar los datos del informe general de inspección de riesgos del paso"
      operationId: "getPaso"
      description: "permite listar los datos del informe geeral de inspección de riesgos del paso\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: claveTramite
          in: path
          description: "Numero del trámite"
          required: true
          type: string
        - name: email
          in: path
          description: "email del inspector"
          required: true
          type: string
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspRiesgoGeoReferenciacionRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspRiesgoGeoReferenciacionFunction.Arn}/invocations"
        responses:
          "default":
            statusCode: "200"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": $body.exito, \n
                  \"mensaje\": \"$body.mensaje\", \n
                  \"data\": [
                        {
                          \"coordX\":  \"$body.data.coordX\", \n
                          \"coordY\":  \"$body.data.coordY\" \n
                        }
                     ], 
                  \"errores\": []
                }
                "             
          "BAD.*":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"No encontrado\", \n
                  \"data\": [], 
                  \"errores\": [{ 
                    \"codigo\": \"2\",
                    \"mensaje\": \"No encontrado\"
                  }]
                }
              "
          "INT.*":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Interno\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"-1\",
                    \"mensaje\": \"Error Interno\"
                  }]
                }
              "                  
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
             \"action\": \"listar\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"   
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"             
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"     
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"             

definitions:
  Inspeccion:
    type: object
    required:
    - claveTramite
    - email
    - codInspector
    - coordX
    - coordY
    properties:
      claveTramite:
        type: string
      email:
        type: string
      codInspector:
        type: string 
      coordX:
        type: float
      coordY:
        type: float  

  Empty:
    type: "object"
    title: "Empty Schema"