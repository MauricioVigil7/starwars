AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.

Parameters:
  Environment:
    Type: String
    Description: Valor del entorno
    Default: dev
  LambdaToken:
    Type: String
    Description: ARN de la Lambda del token

Resources:

  InspRiesgoEnvioArchivosApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join 
        - "" 
        - - InspRiesgoEnvioArchivos
          - "-"
          - !Ref Environment
      BinaryMediaTypes: 
      - "*~1*"
      StageName: !Ref Environment
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../../Api/InspRiesgoEnvioArchivos/definitions.yml

  InspRiesgoEnvioArchivosRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - ""
        - - InspRiesgoEnvioArchivosRole
          - !Ref Environment
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "Lambda"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"        
        - PolicyName: "DynamoCRUD"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                Resource: '*'        
        - PolicyName: "S3"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketPolicy"
                  - "s3:GetObject"
                  - "s3:GetObjectAcl"
                  - "s3:PutObject"
                  - "s3:DeleteObject"
                Resource: '*'
        - PolicyName: "CWL"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:GetLogEvents
                  - logs:GetLogGroupFields
                  - logs:GetLogRecord
                  - logs:PutDestination
                  - logs:PutLogEvents
                  - logs:PutQueryDefinition
                  - logs:UpdateLogDelivery
                Resource: '*'    

  InspRiesgoEnvioArchivosFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join
        - ""
        - - InspRiesgoEnvioArchivos
          - "-"
          - !Ref Environment
      Description: Permite cargar, descargar y eliminar los archivos
      CodeUri: ../../Functions/InspRiesgoEnvioArchivos/
      Handler: handler.archivos
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 60
      Role: !GetAtt InspRiesgoEnvioArchivosRole.Arn
      Environment:
        Variables:
          REGION: !Ref "AWS::Region"
          DATOS_ARCHIVO_TABLE: DatosArchivo
          BUCKET_NAME: archivos-solicitud

Outputs:
  InspRiesgoEnvioArchivosApi:
    Description: ARN de la API InspRiesgoEnvioArchivosApi
    Value: !Ref InspRiesgoEnvioArchivosApi
    
  InspRiesgoEnvioArchivosRole:
    Description: Arn de Role InspRiesgoEnvioArchivosRole
    Value: !GetAtt InspRiesgoEnvioArchivosRole.Arn

  InspRiesgoEnvioArchivosFunction:
    Description: Arn de la Funcion InspRiesgoEnvioArchivosFunction
    Value: !GetAtt InspRiesgoEnvioArchivosFunction.Arn