swagger: "2.0"
info:
  description: "Permite el registro de informe de inspección de riesgo de construcción"
  version: "v1.0"
  title: "Servicio Cloud para Registro Informe de Inspección"
  contact: 
    email: "soporte@mapfre.com.pe"    
  license: 
      name: "Apache 2.0"
      url: "http://www.apache.org/licenses/LICENSE-2.0.html"    

schemes:
- "https"

securityDefinitions:
   autorizador:
     type: "apiKey"
     name: "Authorization"
     in: "header"
     x-amazon-apigateway-authtype: "custom"
     x-amazon-apigateway-authorizer:
       authorizerUri:
         Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaToken}/invocations"
       authorizerCredentials:
         Fn::GetAtt: "InspCheckListEmpresarialRole.Arn"
       authorizerResultTtlInSeconds: 300
       type: "token"

paths:
  /:
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /InspCheckListEmpresarial:
    options:
        consumes:
        - "application/json"
        produces:
        - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
          
  /InspCheckListEmpresarial/in/{paso}:
    options:
        parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        consumes:
        - "application/json"
        produces:
        - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'PUT,GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    post:
      tags: 
        - inspeccion-InspCheckListEmpresarial-cloud-service-handler      
      summary: "actualizar datos del informe de inspeccion de riesgos"
      operationId: "insertPaso"
      description: "Permite actualizar los datos de informe de inspección de riesgo del paso 4\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        - name: inspeccion
          in: body
          description: "Información de la Inspección a registrar"
          #required: true
          schema:
            $ref: "#/definitions/Inspeccion"
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspCheckListEmpresarialRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspCheckListEmpresarialFunction.Arn}/invocations"
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                $root.body
              "               
          "BAD.*":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Token\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"1\",
                    \"mensaje\": \"No se reconoce token\"
                  }]
                }
              "           
          "INT.*":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Interno\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"-1\",
                    \"mensaje\": \"Error Interno\"
                  }]
                }
              "                                
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
              \"action\": \"insertPaso\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"

  /InspCheckListEmpresarial/up/{paso}:
    options:
        parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        consumes:
        - "application/json"
        produces:
        - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'PUT,GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    put:
      tags: 
        - inspeccion-InspCheckListEmpresarial-cloud-service-handler      
      summary: "actualizar datos del informe de inspeccion de riesgos"
      operationId: "updatePaso"
      description: "Permite actualizar los datos de informe de inspección de riesgo del paso 4\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        - name: inspeccion
          in: body
          description: "Información de la Inspección a registrar"
          #required: true
          schema:
            $ref: "#/definitions/Inspeccion"
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspCheckListEmpresarialRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspCheckListEmpresarialFunction.Arn}/invocations"
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                
                  $root.body
                
              "               
          "BAD.*":
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Token\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"1\",
                    \"mensaje\": \"No se reconoce token\"
                  }]
                }
              "           
          "INT.*":
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: " \n
                #set ($root=$util.parseJson($input.json('$'))) \n
                #set ($body = $util.parseJson($root.body)) \n
                { \n
                  \"exito\": false, \n
                  \"mensaje\": \"Error Interno\", \n
                  \"data\": [],
                  \"errores\":[{
                    \"codigo\": \"-1\",
                    \"mensaje\": \"Error Interno\"
                  }]
                }
              "                                
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
          application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
              \"action\": \"updatePaso\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"

  /InspCheckListEmpresarial/gt/{paso}/{claveTramite}/{email}/{codTipoTramite}:
    options:
        parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        - name: claveTramite
          in: path
          description: "Numero del trámite"
          required: true
          type: string
        - name: email
          in: path
          description: "email del inspector"
          required: true
          type: string
        - name: codTipoTramite
          in: path
          description: "email del inspector"
          required: true
          type: string
        consumes:
        - "application/json"
        produces:
        - "application/json"
        responses:
          200:
            description: "200 response"
            schema:
              $ref: "#/definitions/Empty"
            headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        x-amazon-apigateway-integration:
          responses:
            default:
              statusCode: "200"
              responseParameters:
                method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
          passthroughBehavior: "when_no_match"
          requestTemplates:
            application/json: "{\"statusCode\": 200}"
          type: "mock"
    get:
      tags: 
        - auto-inspeccion-cloud-service-handler      
      summary: "permite listar los datos del informe de inspección de riesgos del paso"
      operationId: "getPaso"
      description: "permite listar los datos del informe de inspección de riesgos del paso\n"
      security:
        - autorizador: []   
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: paso
          in: path
          description: "Información de la Inspección a registrar"
          required: true
          type: string
        - name: claveTramite
          in: path
          description: "Numero del trámite"
          required: true
          type: string
        - name: email
          in: path
          description: "email del inspector"
          required: true
          type: string
        - name: codTipoTramite
          in: path
          description: "email del inspector"
          required: true
          type: string
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: "InspCheckListEmpresarialRole.Arn"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InspCheckListEmpresarialFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        requestTemplates:
           application/json: " \n
          #set($allParams = $input.params()) \n
          #set($inputRoot = $input.json('$')) \n
           {
              \"action\": \"getPaso\", \n
              \"params\" : { \n
                #foreach($type in $allParams.keySet()) \n
                #set($params = $allParams.get($type)) \n
                \"$type\" : { \n
                  #foreach($paramName in $params.keySet()) \n
                  \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\" \n
                  #if($foreach.hasNext),#end \n
                  #end \n
                } \n
                #if($foreach.hasNext),#end \n
                #end \n
              }, \n
              \"data\": $inputRoot \n
            }"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
      responses:
        200:
          description: "Operación exitosa"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        401:
          description: "Error de authenticación"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"
        500:
          description: "Error en el servidor"
          schema:
            $ref: "#/definitions/Empty"
          headers:
              Access-Control-Allow-Origin:
                type: "string"
              Access-Control-Allow-Methods:
                type: "string"
              Access-Control-Allow-Headers:
                type: "string"


definitions:
  Inspeccion:
    type: object
    required:
    - claveTramite
    - codTipoTramite
    - email   
    properties:
      claveTramite:
        type: string
      codTipoTramite:
        type: string
      email:
        type: string
      fechaRegistro:
        type: string
      fechaActualizacion:
        type: string
      fechaInspeccion:
        type: string
      horaInspeccion:
        type: string
      direccion:
        type: string 
      nombreInspector:
        type: string 
      datosGenerales:
        $ref: "#/definitions/datosGenerales"
      informacionSBS:
        $ref: "#/definitions/informacionSBS"
      valoresDeclarados:
        $ref: "#/definitions/valoresDeclarados"
      # edificacion:
      #   $ref: "#/definitions/edificacion"
      # actividadDesarrollada:
      #   $ref: "#/definitions/Actividad"
      # almacenamiento:
      #   $ref: "#/definitions/almacenamiento"
      # incendio:
      #   $ref: "#/definitions/incendio"
      # roboAsalto:
      #   $ref: "#/definitions/roboAsalto"
      # siniestro:
      #   $ref: "#/definitions/siniestro"
      # listArchivo:
      #   $ref: "#/definitions/listArchivo"
      # listEnlace:
      #   $ref: "#/definitions/listEnlace"
      # ramosTecnico:
       # $ref: "#/definitions/ramosTecnico"

  #   ### paso 5   
  datosGenerales:
    type: object
    properties:
      razonSocial:
        type: string       
      actividadLocal:
        type: string 

  informacionSBS: 
    type: object
    properties:
      numeroPisos:
        type: integer 
      numeroSotanos:
        type: integer   
      codTipoEstructura:
        type: integer
      codTipoUso:
        type: integer
      coordLatitud:
        type: number
      coordLongitud:
        type: number 

  valoresDeclarados:
    type: object
    properties:
      montoContenido:
        type: number
      montoEdificacion:
        type: number
      montoMaquinaria:
        type: number
      montoExistencia:
        type: number
      montoLucroCesante:
        type: number
      total:
        type: number

# # # paso 6
#   edificacion:
#     type: object
#     properties:
#       codEdificacion:
#         type: string
#       edificacionInterna:
#         type: object
#         properties:
#           descripcion:
#             type: string
#       entornoEdificacion:
#         type: object
#         properties:
#           riosQuebradas:
#             type: string
#           colindantes:
#             type: string

# # paso 7
#   actividadDesarrollada:
#     type: object
#     properties:
#       codActividad:
#         type: string
#       descripcionActividad:
#         type: string
#       descripcionPersonal:  
#         type: string

# # paso 8
#   almacenamiento:
#     type: object
#     properties:
#       codAlmacenamiento:
#         type: string
#       edificacion:
#         type: string
#       mercaderia:
#         type: string
#       caracteristica:
#         type: string
#       inventario:
#         type: string

# # paso 9
#   incendio:
#     type: object
#     properties:
#       codIncendio:
#         type: string
#       medidaPrevencionPoteccionPasiva:
#         type: object
#         properties:
#           ordenLimpieza:
#             type: boolean
#           procTrabCaliente:
#             type: boolean
#           instElectProtegida:
#             type: boolean
#           codBrigada:
#             type: string
#   medidasProteccion:
#     type: object
#     properties:
#       extintores:
#         type: object
#         properties:
#           pQS:
#             type: boolean
#           noPosee:
#             type: boolean
#   deteccion:
#     type: object
#     properties:
#       sensores:
#         type: object
#         properties:
#           pulsadorManual:
#             type: boolean
#           sensorIonico:
#             type: boolean
#           sensorTemperatura:
#             type: boolean
#           photoBeam:
#             type: boolean
#       monitoreo:
#         type: object
#         properties:
#           codElemento:
#             type: string
#       bomba:
#         type: object
#         properties:
#           codElemento:
#             type: string
#       gabinetes:
#         type: object
#         properties:
#           codElemento:
#             type: string
#       rociadores:
#         type: object
#         properties:
#           codElemento:
#             type: string
#       bomberos:
#         type: object
#         properties:
#           codElemento:
#               type: string
       
# paso 10

  # ramosTecnico:
  #   type: object
  #   properties:
  #     codRamos:
  #       type: string
  #     roturaMaquinaria:
  #       type: object
  #       properties:
  #         codEquipo:
  #           type: string
  #         codMantenimiento:
  #           type: string
  #         codRepuesto:
  #           type: string
  #         codRegistro:
  #           type: string
  #     ServGenSuministros:
  #       type: object
  #       properties:
  #         codElectricidad:
  #           type: string
  #         codGrupoElectrogeno:
  #           type: string
  #         codSistemaFrio:
  #           type: string
  #         codPozoTierra:
  #           type: string

 # paso 11

  roboAsalto:
    type: object
    properties:
      codRoboAsalto:
        type: string
      accesoPredio:
        type: object
        properties:
          codAcceso:
            type: string
          codPerimetro:
            type: string
      proteccionContraRobo:
        type: object
        properties:
          codVigilancia:
            type: string
          alarma:
            type: object
            properties:
              codSensor:
                type: string
              otros:
                type: string
          cctv:
            type: object
            properties:
              codUbicacion:
                type: string
              codMonitoreo:
                type: string
      existenciasValoresExpRobo:
        type: object
        properties:
          objetoMayor5000:   
            type: string
          manejoValores:  
            type: object
            properties:   
              codManejoValor:
                type: string
              descripcionProcedimiento:
                type: string          

#  paso 12
  siniestros:
    type: object
    properties:
      codSiniestro:
        type: string
      descripcionSiniestro:
        type: string
      
  ### paso 13
  Enlace:
    type: object
    properties:
      codEnlace:
        type: string
      nomEnlace:
        type: string
      eliminado:
        type: boolean

  listEnlace: 
    type: array
    items:
      $ref: '#/definitions/Enlace'

  listArchivo: 
    type: array
    items:
      $ref: '#/definitions/Archivo'

  Archivo:
    type: object
    properties:
      codArchivo:
        type: string
      tipArchivo:
        type: integer
      nomArchivo:
        type: string
      eliminado:
        type: boolean

  # listaEntrevistados: 
  #   type: array
  #   items:
  #     $ref: '#/definitions/Entrevistados'

  # Entrevistados:
  #   type: object
  #   properties:
  #     codEntrevistado:
  #       type: string
  #     nombreEntrevistado:
  #       type: string
  #     cargo:
  #       type: string
  #     correo:
  #       type: string
  #     telefono:
  #       type: string
  #     eliminado:
  #       type: boolean

  Empty:
    type: "object"
    title: "Empty Schema"
